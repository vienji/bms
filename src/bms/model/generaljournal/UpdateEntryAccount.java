/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package bms.model.generaljournal;

import bms.classes.Account;
import bms.dbcontroller.AccountDBController;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import java.awt.event.KeyEvent;
import bms.listeners.GeneralJournalListener;


/**
 *
 * @author Vienji
 */
public class UpdateEntryAccount extends javax.swing.JFrame{
    private GeneralJournalListener listener;
    private int accountIndex;
    /**
     * Creates new form AddEntryAccount
     */
    public UpdateEntryAccount() {
        initComponents();
    }
    
    public UpdateEntryAccount(GeneralJournalListener listener, int accountIndex){
         initComponents();
         initAccountSelectionBox();
         this.listener = listener;
         this.accountIndex = accountIndex;
    }

    private boolean isNumeric(String amount){       
        try{
            Double.parseDouble(amount);
            return true;
        } catch (NumberFormatException e){
            return false;
        }      
    }
    
    private void initAccountSelectionBox(){            
        ArrayList<Account> accountList = new AccountDBController().getAllAccounts();
        accountList.forEach((e) -> {
            accountSelectionBox.addItem(e.getAccountName());
        });
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        accountSelectionBox = new javax.swing.JComboBox<>();
        amount = new javax.swing.JTextField();
        cancel = new javax.swing.JButton();
        confirm = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        action = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Update Account");
        setResizable(false);

        jLabel1.setText("Account:");

        jLabel2.setText("Amount:");

        accountSelectionBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Choose an account" }));

        amount.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                amountKeyPressed(evt);
            }
        });

        cancel.setText("Cancel");
        cancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelActionPerformed(evt);
            }
        });

        confirm.setText("Confirm");
        confirm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                confirmActionPerformed(evt);
            }
        });

        jLabel3.setText("Action:");

        action.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Debit", "Credit" }));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(confirm)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cancel))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jLabel1)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(accountSelectionBox, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jLabel3)
                                .addComponent(jLabel2))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(amount)
                                .addComponent(action, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))))
                .addContainerGap(21, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(accountSelectionBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(amount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(action, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cancel)
                    .addComponent(confirm))
                .addContainerGap(23, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void cancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelActionPerformed
        dispose();
    }//GEN-LAST:event_cancelActionPerformed

    private void confirmActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_confirmActionPerformed
        if(accountSelectionBox.getSelectedIndex() == 0){
            JOptionPane.showMessageDialog(rootPane, "Please select an account!");
        } else if(amount.getText().isBlank()){
            JOptionPane.showMessageDialog(rootPane, "Please put an amount!");
        } else if(!isNumeric(amount.getText())){
            JOptionPane.showMessageDialog(rootPane, "Please enter a numeric amount!");
        } else {
            int n = JOptionPane.showConfirmDialog(rootPane, "Are you sure you want to save these changes?");
            
            if(n == 0){
                ArrayList<Account> accountList = new AccountDBController().getAllAccounts();
                Account account = accountList.get(accountSelectionBox.getSelectedIndex() - 1);
                account.setAmount(Double.parseDouble(amount.getText()));
                account.setAction(action.getSelectedItem().toString());
                System.out.println(account.getAccountName() + " was updated as " + account.getAction());
                listener.updateEntryAccount(account, accountIndex);
                dispose();
            } 
        }
    }//GEN-LAST:event_confirmActionPerformed

    private void amountKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_amountKeyPressed
        if(evt.getKeyCode() == KeyEvent.VK_ENTER) {
            if(accountSelectionBox.getSelectedIndex() == 0){
                JOptionPane.showMessageDialog(rootPane, "Please select an account!");
            } else if(amount.getText().isBlank()){
                JOptionPane.showMessageDialog(rootPane, "Please put an amount!");
            } else if(!isNumeric(amount.getText())){
                JOptionPane.showMessageDialog(rootPane, "Please enter a numeric amount!");
            } else {
                int n = JOptionPane.showConfirmDialog(rootPane, "Are you sure you want to save these changes?");

                if(n == 0){
                    ArrayList<Account> accountList = new AccountDBController().getAllAccounts();
                    Account account = accountList.get(accountSelectionBox.getSelectedIndex() - 1);
                    account.setAmount(Double.parseDouble(amount.getText()));
                    account.setAction(action.getSelectedItem().toString());
                    System.out.println(account.getAccountName() + " was updated as " + account.getAction());
                    listener.updateEntryAccount(account, accountIndex);
                    dispose();
                } 
            }
        }
    }//GEN-LAST:event_amountKeyPressed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(UpdateEntryAccount.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(UpdateEntryAccount.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(UpdateEntryAccount.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(UpdateEntryAccount.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new UpdateEntryAccount().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    public javax.swing.JComboBox<String> accountSelectionBox;
    public javax.swing.JComboBox<String> action;
    public javax.swing.JTextField amount;
    private javax.swing.JButton cancel;
    private javax.swing.JButton confirm;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    // End of variables declaration//GEN-END:variables
}
